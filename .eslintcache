[{"G:\\website\\Big Projects\\crud-operator\\src\\index.js":"1","G:\\website\\Big Projects\\crud-operator\\src\\App.js":"2","G:\\website\\Big Projects\\crud-operator\\src\\reportWebVitals.js":"3","G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\Home\\Home.js":"4","G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\Header\\Header.js":"5","G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\AddTodo\\AddTodo.js":"6","G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\AllTodo\\AllTodo.js":"7","G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\Spinner\\Spinner.js":"8","G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\Todo\\Todo.js":"9","G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\EditTodo\\Edit.js":"10"},{"size":500,"mtime":1608271505866,"results":"11","hashOfConfig":"12"},{"size":464,"mtime":1608364414370,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":689,"mtime":1608362469104,"results":"15","hashOfConfig":"12"},{"size":1159,"mtime":1608297001189,"results":"16","hashOfConfig":"12"},{"size":2907,"mtime":1608371592845,"results":"17","hashOfConfig":"12"},{"size":873,"mtime":1608371592814,"results":"18","hashOfConfig":"12"},{"size":345,"mtime":1608367078106,"results":"19","hashOfConfig":"12"},{"size":2215,"mtime":1608371608324,"results":"20","hashOfConfig":"12"},{"size":3311,"mtime":1608371593098,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"8k2o2f",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"G:\\website\\Big Projects\\crud-operator\\src\\index.js",[],["45","46"],"G:\\website\\Big Projects\\crud-operator\\src\\App.js",[],"G:\\website\\Big Projects\\crud-operator\\src\\reportWebVitals.js",[],"G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\Home\\Home.js",[],"G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\Header\\Header.js",[],"G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\AddTodo\\AddTodo.js",["47","48"],"import { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\ntoast.configure();\r\nconst AddTodo = () => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = data => {\r\n        const image = data.file[0];\r\n        const formData = new FormData();\r\n        formData.append('name', data.name);\r\n        formData.append('time', data.time);\r\n        formData.append('email', data.email);\r\n        formData.append('title', data.title);\r\n        formData.append('description', data.description);\r\n        formData.append('image', image);\r\n\r\n        fetch('https://secure-dusk-32331.herokuapp.com/addAction', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data) {\r\n                    toast.success('POST ADDED SUCCESSFULLY')\r\n                }\r\n            })\r\n            .catch(error => {\r\n                toast.error('FAILED TO ADD POST')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: \"white\", borderRadius: \"10px\", padding: \"10px\" }}>\r\n            <h3 className=\"text-center\">write a post</h3>\r\n            <form className=\"w-100 p-1\" onSubmit={handleSubmit(onSubmit)}>\r\n                <input className=\"form-control mb-1\" required name=\"name\" placeholder=\"Your Name\" ref={register()} />\r\n\r\n                <input style={{ display: \"none\" }} name=\"time\" defaultValue={new Date().toDateString()} ref={register()} />\r\n\r\n                <input className=\"form-control mb-1\" required name=\"email\" placeholder=\"Your email address\" ref={register()} />\r\n\r\n                <input className=\"form-control mb-1\" required name=\"title\" placeholder=\"Write the title\" ref={register()} />\r\n\r\n                <textarea required className=\"form-control mb-1\" name=\"description\" placeholder=\"Write your post here\" rows=\"5\" ref={register()} />\r\n\r\n                <label required style={{\r\n                    backgroundColor: \"#b9fffc\",\r\n                    color: \"#132743\",\r\n                    border: \"1px solid #0f3057\",\r\n                    borderRadius: \"5px\"\r\n                }}\r\n                    className=\"custom-file-upload w-100 p-2 text-center\">\r\n\r\n                    <input name=\"file\" style={{ display: \"none\" }} ref={register({ required: true })} type=\"file\" />\r\n                    <FontAwesomeIcon icon={faCloudUploadAlt} /> upload image\r\n                        </label>\r\n                <br />\r\n\r\n                <input className=\"btn btn-primary w-100\" value=\"post\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTodo;","G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\AllTodo\\AllTodo.js",[],"G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\Spinner\\Spinner.js",[],"G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\Todo\\Todo.js",["49"],"G:\\website\\Big Projects\\crud-operator\\src\\Components\\Home\\EditTodo\\Edit.js",["50","51","52","53","54"],"import React, { useEffect, useState } from 'react';\r\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useForm } from \"react-hook-form\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Header from '../Header/Header';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\ntoast.configure();\r\nconst Edit = () => {\r\n    const [todoInfo, setTodoInfo] = useState([]);\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const loadInfoData = async () => {\r\n            const base_url = `https://secure-dusk-32331.herokuapp.com/allActions/${id}`\r\n            const res = await fetch(base_url)\r\n            const data = await res.json()\r\n            setTodoInfo(data)\r\n        }\r\n        loadInfoData();\r\n    }, [])\r\n\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const onSubmit = data => {\r\n        const formData = new FormData();\r\n        formData.append('name', data.name);\r\n        formData.append('time', data.time);\r\n        formData.append('email', data.email);\r\n        formData.append('title', data.title);\r\n        formData.append('description', data.description);\r\n\r\n        fetch(`https://secure-dusk-32331.herokuapp.com/updateAction/${id}`, {\r\n            method: 'PATCH',\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data) {\r\n                    history.push('/')\r\n                    toast.success('POST UPDATE SUCCESSFULLY')\r\n                }\r\n            })\r\n            .catch(error => {\r\n                toast.error('FAILED TO UPDATE POST')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: \"#bce6eb\", minHeight: \"100vh\" }} className=\"container-fluid\">\r\n            <Header />\r\n            <div className=\"w-75 ml-auto mr-auto pt-5\">\r\n                <div style={{ backgroundColor: \"white\", borderRadius: \"10px\", padding: \"10px\" }}>\r\n                    <h3 className=\"text-center\">Update your post</h3>\r\n                    <form className=\"w-100 p-1\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <input className=\"form-control mb-1\" defaultValue={todoInfo.name} required name=\"name\" placeholder=\"Your Name\" ref={register()} />\r\n\r\n                        <input style={{ display: \"none\" }} name=\"time\" defaultValue={new Date().toDateString()} ref={register()} />\r\n\r\n                        <input className=\"form-control mb-1\" required defaultValue={todoInfo.email} name=\"email\" placeholder=\"Your email address\" ref={register()} />\r\n\r\n                        <input className=\"form-control mb-1\" required defaultValue={todoInfo.title} name=\"title\" placeholder=\"Write the title\" ref={register()} />\r\n\r\n                        <textarea required className=\"form-control mb-1\" defaultValue={todoInfo.description} name=\"description\" placeholder=\"Write your post here\" rows=\"5\" ref={register()} />\r\n\r\n                        <input className=\"btn btn-primary w-100\" value=\"update\" type=\"submit\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Edit;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":6,"column":10,"nodeType":"61","messageId":"62","endLine":6,"endColumn":24},{"ruleId":"59","severity":1,"message":"63","line":11,"column":37,"nodeType":"61","messageId":"62","endLine":11,"endColumn":43},{"ruleId":"59","severity":1,"message":"60","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":24},{"ruleId":"59","severity":1,"message":"64","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":26},{"ruleId":"59","severity":1,"message":"65","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":6,"column":10,"nodeType":"61","messageId":"62","endLine":6,"endColumn":24},{"ruleId":"66","severity":1,"message":"67","line":25,"column":8,"nodeType":"68","endLine":25,"endColumn":10,"suggestions":"69"},{"ruleId":"59","severity":1,"message":"63","line":28,"column":37,"nodeType":"61","messageId":"62","endLine":28,"endColumn":43},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","'faCloudUploadAlt' is defined but never used.","'FontAwesomeIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [id]",{"range":"75","text":"76"},[909,911],"[id]"]